====================================================================================
=	Author:			William Posey
=	Course: 		University of Florida, CNT 5410
=	Semester:		Fall 2017
=	Project:		Assignment 2, Suncrypt
=	File:			README
=	Description:	This file describes some basics about suncrypt and sundec
====================================================================================

Table of Contents
------------------
1) Quick Background
2) Required files
3) Required libraries
4) Miscellaneous Notes

====================================================================================
1) QUICK BACKGROUND
====================================================================================
*	This project includes two programs, suncrypt and sundec. Encryption is carried
	out by suncrypt, while decryption is carried out by sundec

*	The project is written in C++, and must be compiled with GNU GCC g++

*	The project involves utilizing libgcrypt to perform cryptographic functions

*	Both programs accept a <file> input, followed by a <-l> or <-d> for the mode. 
	Local mode, <-l> encrypts a file and writes the output file to a file with the 
	input file name appended by ".uf" in suncrypt, and decrypts a file that is 
	assumed to have the ".uf" extension and outputs to a file with the input name 
	without the extension in sundec. Daemon, or network, mode -d, performs the same 
	operations, but the	output file of suncrypt is sent over the network to sundec 
	running	at the input <IPaddress:port>, where sundec is awaiting the arrival 
	of the file on <port>

*	Input format as specified above, for each program is:
	./suncrypt <file-to-encrypt> [-d <IPaddress>:<port>] [-l]
	./sundec <file-to-decrypt> [-d <port>] [-l]

====================================================================================
2) REQUIRED FILES
====================================================================================
*	Suncrypt.cpp
*	Suncrypt.h
*	Sundec.cpp
*	Sundec.h
*	SunGcrypt.cpp
*	SunGcrypt.h
*	SuncryptSocket.cpp
*	SuncryptSocket.h
*	FileOps.cpp
*	FileOps.h
*	makefile

====================================================================================
3) REQUIRED LIBRARIES
====================================================================================
*	The project was developed and tested on a machine with the libgcrypt20-dev 
	package installed, which provides the libgcrypt.so and libgpg-error.so dynamic 
	libraries, the libgcrypt.a and libgpg-error.a static libraries, and the gcrypt.h
	and gpg-error.h header files

*	The programs can both be compiled with the use of the makefile. By default, the
	makefile will try to compile as if the libgcrypt20-dev package is installed on
	the host system (by utilizing "-lgcrypt" to link against libgcrypt.so.20, and 
	including gcrypt.h and gpg-error.h from /usr/include).

*	If libgcrypt20-dev is not installed on the host system, the program can be
	be compiled with the target "static" (make static) instead. This will compile
	and link against the static libraries found in the realtive directory gcrypt/libs
	which contains both 32 bit and 64 bit static libraries for libgcrypt and
	libgpg-error, and will utilize the include path gcrypt/headers, where the gcrypt.h
	and gpg-error.h headers are located

====================================================================================
4) MISCELLANEOUS NOTES
====================================================================================
*	All testing done on thunder.cise.ufl.edu was with the static libraries, due to
	libgcrypt20-dev not being installed on the Ubuntu system

*	When utilizing -d options on both suncrypt and sundec to send the encrypted file
	to the IP address and port that sundec is listening on, either program can be 
	started first; a simple acknowledgement system with timeouts is used for the 
	network communication, so suncrypt will continually send the first block of the
	encrypted file until an ack is received, while sundec simply waits for any input
	